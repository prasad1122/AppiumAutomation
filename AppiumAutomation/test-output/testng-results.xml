<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="HelixSenseMobile" duration-ms="89488" started-at="2022-03-02T19:22:59 IST" finished-at="2022-03-02T19:24:28 IST">
    <groups>
    </groups>
    <test name="LoginTest" duration-ms="19931" started-at="2022-03-02T19:22:59 IST" finished-at="2022-03-02T19:23:19 IST">
      <class name="HelixSenseTests.LoginTest">
        <test-method status="PASS" signature="extentReportBeforeClass()[pri:0, instance:HelixSenseTests.LoginTest@2d5aee]" name="extentReportBeforeClass" is-config="true" duration-ms="9" started-at="2022-03-02T19:22:59 IST" finished-at="2022-03-02T19:22:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportBeforeClass -->
        <test-method status="PASS" signature="extentReportBeforeMethod(java.lang.reflect.Method)[pri:0, instance:HelixSenseTests.LoginTest@2d5aee]" name="extentReportBeforeMethod" is-config="true" duration-ms="7" started-at="2022-03-02T19:22:59 IST" finished-at="2022-03-02T19:22:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void HelixSenseTests.LoginTest.HelixSenseLogIn() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportBeforeMethod -->
        <test-method status="PASS" signature="testSetup(java.lang.reflect.Method,java.lang.String,java.lang.String)[pri:0, instance:HelixSenseTests.LoginTest@2d5aee]" name="testSetup" is-config="true" duration-ms="13799" started-at="2022-03-02T19:22:59 IST" finished-at="2022-03-02T19:23:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void HelixSenseTests.LoginTest.HelixSenseLogIn() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LFMBYDSGYXDQCIJF]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="HelixSenseLogIn()[pri:0, instance:HelixSenseTests.LoginTest@2d5aee]" name="HelixSenseLogIn" duration-ms="4530" started-at="2022-03-02T19:23:13 IST" finished-at="2022-03-02T19:23:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HelixSenseLogIn -->
        <test-method status="PASS" signature="testCleanUp(org.testng.ITestResult)[pri:0, instance:HelixSenseTests.LoginTest@2d5aee]" name="testCleanUp" is-config="true" duration-ms="782" started-at="2022-03-02T19:23:17 IST" finished-at="2022-03-02T19:23:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HelixSenseLogIn status=SUCCESS method=LoginTest.HelixSenseLogIn()[pri:0, instance:HelixSenseTests.LoginTest@2d5aee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="extentReportAfterMethod(org.testng.ITestResult)[pri:0, instance:HelixSenseTests.LoginTest@2d5aee]" name="extentReportAfterMethod" is-config="true" duration-ms="736" started-at="2022-03-02T19:23:18 IST" depends-on-methods="HelixSenseTests.HelixSenseTestBase.testCleanUp" finished-at="2022-03-02T19:23:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HelixSenseLogIn status=SUCCESS method=LoginTest.HelixSenseLogIn()[pri:0, instance:HelixSenseTests.LoginTest@2d5aee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportAfterMethod -->
      </class> <!-- HelixSenseTests.LoginTest -->
    </test> <!-- LoginTest -->
    <test name="HelpdeskRaiseTicketByLocationTest" duration-ms="46313" started-at="2022-03-02T19:23:19 IST" finished-at="2022-03-02T19:24:05 IST">
      <class name="HelixSenseTests.HelpdeskRaiseTicketByLocationTest">
        <test-method status="PASS" signature="extentReportBeforeClass()[pri:0, instance:HelixSenseTests.HelpdeskRaiseTicketByLocationTest@76c8cd]" name="extentReportBeforeClass" is-config="true" duration-ms="1" started-at="2022-03-02T19:23:19 IST" finished-at="2022-03-02T19:23:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportBeforeClass -->
        <test-method status="PASS" signature="testSetup(java.lang.reflect.Method,java.lang.String,java.lang.String)[pri:0, instance:HelixSenseTests.HelpdeskRaiseTicketByLocationTest@76c8cd]" name="testSetup" is-config="true" duration-ms="10521" started-at="2022-03-02T19:23:19 IST" finished-at="2022-03-02T19:23:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void HelixSenseTests.HelpdeskRaiseTicketByLocationTest.verifyHelpdeskRaiseTicketByLocation() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LFMBYDSGYXDQCIJF]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="extentReportBeforeMethod(java.lang.reflect.Method)[pri:0, instance:HelixSenseTests.HelpdeskRaiseTicketByLocationTest@76c8cd]" name="extentReportBeforeMethod" is-config="true" duration-ms="0" started-at="2022-03-02T19:23:19 IST" finished-at="2022-03-02T19:23:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void HelixSenseTests.HelpdeskRaiseTicketByLocationTest.verifyHelpdeskRaiseTicketByLocation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportBeforeMethod -->
        <test-method status="FAIL" signature="verifyHelpdeskRaiseTicketByLocation()[pri:0, instance:HelixSenseTests.HelpdeskRaiseTicketByLocationTest@76c8cd]" name="verifyHelpdeskRaiseTicketByLocation" duration-ms="33868" started-at="2022-03-02T19:23:29 IST" finished-at="2022-03-02T19:24:03 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ERROR!New Ticket is not created and it is failed expected [false] but found [TestChairTicket82618798]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ERROR!New Ticket is not created and it is failed expected [false] but found [TestChairTicket82618798]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at HelixSenseTests.HelpdeskRaiseTicketByLocationTest.verifyHelpdeskRaiseTicketByLocation(HelpdeskRaiseTicketByLocationTest.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHelpdeskRaiseTicketByLocation -->
        <test-method status="PASS" signature="testCleanUp(org.testng.ITestResult)[pri:0, instance:HelixSenseTests.HelpdeskRaiseTicketByLocationTest@76c8cd]" name="testCleanUp" is-config="true" duration-ms="1598" started-at="2022-03-02T19:24:03 IST" finished-at="2022-03-02T19:24:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHelpdeskRaiseTicketByLocation status=FAILURE method=HelpdeskRaiseTicketByLocationTest.verifyHelpdeskRaiseTicketByLocation()[pri:0, instance:HelixSenseTests.HelpdeskRaiseTicketByLocationTest@76c8cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="extentReportAfterMethod(org.testng.ITestResult)[pri:0, instance:HelixSenseTests.HelpdeskRaiseTicketByLocationTest@76c8cd]" name="extentReportAfterMethod" is-config="true" duration-ms="316" started-at="2022-03-02T19:24:05 IST" depends-on-methods="HelixSenseTests.HelixSenseTestBase.testCleanUp" finished-at="2022-03-02T19:24:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHelpdeskRaiseTicketByLocation status=FAILURE method=HelpdeskRaiseTicketByLocationTest.verifyHelpdeskRaiseTicketByLocation()[pri:0, instance:HelixSenseTests.HelpdeskRaiseTicketByLocationTest@76c8cd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportAfterMethod -->
      </class> <!-- HelixSenseTests.HelpdeskRaiseTicketByLocationTest -->
    </test> <!-- HelpdeskRaiseTicketByLocationTest -->
    <test name="AssetRegistryByNameTest" duration-ms="23187" started-at="2022-03-02T19:24:05 IST" finished-at="2022-03-02T19:24:28 IST">
      <class name="HelixSenseTests.AssetRegistryByNameTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097]" name="beforeSuite" is-config="true" duration-ms="1382" started-at="2022-03-02T19:22:58 IST" finished-at="2022-03-02T19:22:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="extentReportBeforeClass()[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097]" name="extentReportBeforeClass" is-config="true" duration-ms="1" started-at="2022-03-02T19:24:05 IST" finished-at="2022-03-02T19:24:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportBeforeClass -->
        <test-method status="PASS" signature="extentReportBeforeMethod(java.lang.reflect.Method)[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097]" name="extentReportBeforeMethod" is-config="true" duration-ms="0" started-at="2022-03-02T19:24:05 IST" finished-at="2022-03-02T19:24:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void HelixSenseTests.AssetRegistryByNameTest.AssetRegistryByNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportBeforeMethod -->
        <test-method status="PASS" signature="testSetup(java.lang.reflect.Method,java.lang.String,java.lang.String)[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097]" name="testSetup" is-config="true" duration-ms="11116" started-at="2022-03-02T19:24:05 IST" finished-at="2022-03-02T19:24:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void HelixSenseTests.AssetRegistryByNameTest.AssetRegistryByNameTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LFMBYDSGYXDQCIJF]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetup -->
        <test-method status="PASS" signature="AssetRegistryByNameTest()[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097]" name="AssetRegistryByNameTest" duration-ms="11178" started-at="2022-03-02T19:24:16 IST" finished-at="2022-03-02T19:24:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssetRegistryByNameTest -->
        <test-method status="PASS" signature="testCleanUp(org.testng.ITestResult)[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097]" name="testCleanUp" is-config="true" duration-ms="580" started-at="2022-03-02T19:24:28 IST" finished-at="2022-03-02T19:24:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssetRegistryByNameTest status=SUCCESS method=AssetRegistryByNameTest.AssetRegistryByNameTest()[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="extentReportAfterMethod(org.testng.ITestResult)[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097]" name="extentReportAfterMethod" is-config="true" duration-ms="305" started-at="2022-03-02T19:24:28 IST" depends-on-methods="HelixSenseTests.HelixSenseTestBase.testCleanUp" finished-at="2022-03-02T19:24:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssetRegistryByNameTest status=SUCCESS method=AssetRegistryByNameTest.AssetRegistryByNameTest()[pri:0, instance:HelixSenseTests.AssetRegistryByNameTest@dba097] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReportAfterMethod -->
      </class> <!-- HelixSenseTests.AssetRegistryByNameTest -->
    </test> <!-- AssetRegistryByNameTest -->
  </suite> <!-- HelixSenseMobile -->
</testng-results>
